spring:
  application:
    name: user-service
  
  profiles:
    active: dev
  
  datasource:
    url: jdbc:sqlserver://localhost:1433;databaseName=eventticket;encrypt=true;trustServerCertificate=true
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:YourStrong@Passw0rd}
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.SQLServerDialect
        format_sql: true
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration

server:
  port: 8081
  servlet:
    context-path: /api/v1/users

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.eventticket.userservice: DEBUG
    org.springframework.security: DEBUG

# Custom application properties
app:
  jwt:
    secret: ${JWT_SECRET:your-256-bit-secret-key-here}
    expiration: 86400000 # 24 hours
  
  firebase:
    project-id: ${FIREBASE_PROJECT_ID}
    private-key-id: ${FIREBASE_PRIVATE_KEY_ID}
    private-key: ${FIREBASE_PRIVATE_KEY}
    client-email: ${FIREBASE_CLIENT_EMAIL}
    client-id: ${FIREBASE_CLIENT_ID}
    auth-uri: https://accounts.google.com/o/oauth2/auth
    token-uri: https://oauth2.googleapis.com/token
    auth-provider-x509-cert-url: https://www.googleapis.com/oauth2/v1/certs
    client-x509-cert-url: ${FIREBASE_CLIENT_X509_CERT_URL}
  
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:4200}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method 